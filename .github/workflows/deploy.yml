name: Deploy Theme

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Clean vendor and install Composer dependencies
      uses: docker://composer:latest
      with:
        args: |
          rm -rf ./vendor
          composer install -o

    - name: Upload Composer dependencies as artifact
      uses: actions/upload-artifact@v3
      with:
        name: vendor
        path: vendor/

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.11.1'

    - name: Install Node.js dependencies and build assets
      run: |
        npm install
        npm run build:production

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build
        path: dist/

    - name: Deploy to DigitalOcean via rsync
    name: Deploy Theme

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.11.1'

    - name: Install dependencies and build
      run: |
        npm install
        npm run build:production

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build
        path: dist/

    - name: Deploy to DigitalOcean via rsync
      uses: appleboy/ssh-action@v0.1.8
      with:
        host: ${{ secrets.DIGITALOCEAN_HOST }}
        username: ${{ secrets.DIGITALOCEAN_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          set -x  # Enable command tracing

          # Print current directory
          echo "Current directory:"
          pwd

          # Print files in the current directory
          echo "Files in the current directory:"
          ls -la

          # Test SSH connection and print success
          echo "Testing SSH connection..."
          ssh -o StrictHostKeyChecking=no -T ${{ secrets.DIGITALOCEAN_USERNAME }}@${{ secrets.DIGITALOCEAN_HOST }} "echo SSH connection successful"

          # Clean existing theme files
          echo "Cleaning existing theme files..."
          rm -rf /var/www/html/wp-content/themes/betseige

          # Create target directory if it doesn't exist
          echo "Creating target directory..."
          mkdir -p /var/www/html/wp-content/themes/betseige

          # Copy new theme files using rsync
          echo "Copying new theme files..."
          rsync -avz --exclude='.git' --exclude='node_modules' dist/ ${{ secrets.DIGITALOCEAN_USERNAME }}@${{ secrets.DIGITALOCEAN_HOST }}:/var/www/html/wp-content/themes/betseige

          # Print confirmation
          echo "New theme files deployed."

